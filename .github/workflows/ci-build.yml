name: CI Workflow

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-dotnet:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=Tests/TestResults/

    - name: Upload coverage reports to Codacy
      env:
        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
      run: |
        COV_FILE=$(find Tests/TestResults/ -name 'coverage.cobertura.xml')
        bash <(curl -Ls https://coverage.codacy.com/get.sh) report --partial -l CSharp -r $COV_FILE
        bash <(curl -Ls https://coverage.codacy.com/get.sh) final

  build-node:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('client-app/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci
      working-directory: ./client-app

    - name: Build
      run: npm run build --if-present
      working-directory: ./client-app

    - name: Test
      run: npm test
      working-directory: ./client-app

    - name: Generate coverage report
      run: npm run coverage
      working-directory: ./client-app

    - name: Upload coverage reports to Codacy
      env:
        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
      run: |
        bash <(curl -Ls https://coverage.codacy.com/get.sh) report --partial -l TypeScript -r client-app/coverage/lcov.info
        bash <(curl -Ls https://coverage.codacy.com/get.sh) final